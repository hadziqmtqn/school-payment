<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Attributes\Scope;
use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Relations\BelongsTo;
use Illuminate\Database\Eloquent\Relations\HasOne;
use Illuminate\Support\Str;

class Student extends Model
{
    use HasFactory;

    protected $fillable = [
        'slug',
        'user_id',
        'reg_number',
        'whatsapp_number',
        'gender'
    ];

    protected function casts(): array
    {
        return [
            'slug' => 'string',
        ];
    }

    protected static function boot(): void
    {
        parent::boot(); // TODO: Change the autogenerated stub

        static::creating(function (Student $student) {
            $student->slug = Str::uuid()->toString();
            $student->reg_number = strtoupper(str_replace(' ', '-', $student->reg_number));
        });

        static::updating(function (Student $student) {
            $student->reg_number = strtoupper(str_replace(' ', '-', $student->reg_number));
        });
    }

    public function user(): BelongsTo
    {
        return $this->belongsTo(User::class);
    }

    public function studentLevel(): HasOne
    {
        return $this->hasOne(StudentLevel::class, 'student_id');
    }

    // TODO Scope
    #[Scope]
    protected function userId(Builder $query, $userId): Builder
    {
        return $query->where('user_id', $userId);
    }

    #[Scope]
    protected function filterByRegNumber(Builder $query, $regNumber): Builder
    {
        return $query->where('reg_number', $regNumber);
    }
}
